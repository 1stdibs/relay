/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule CompatStory
 */

'use strict';

var _graphql;

const { createFragmentContainer, graphql } = require('Relay');
const React = require('React');
const CompatProfilePic = require('CompatProfilePic');

class CompatStory extends React.Component {
  render() {
    return <div>
      <CompatProfilePic user={this.props.story.actor} />
      {this.props.story.message}
    </div>;
  }

  doSomething() {
    commitMutation(this.props.relay, _graphql || (_graphql = {
      relay: function () {
        const RelayQL_GENERATED = require('RelayQL_GENERATED'),
              CompatStory_story = (CompatStory.__container__ || CompatStory).getFragment('story');

        return {
          kind: 'OperationDefinition',
          argumentDefinitions: [{
            defaultValue: null,
            kind: 'LocalArgument',
            name: 'id'
          }],
          name: 'LikeStory',
          operation: 'mutation',
          node: RelayQL_GENERATED`mutation LikeStory($id: ID!) {
  likeStory(id: $id) {
    ...CompatStory_story
  }
}`
        };
      },
      relayExperimental: function () {
        return require('LikeStory.graphql');
      }
    }), { id: 123 });
  }
}

module.exports = createFragmentContainer(CompatStory, {
  story: {
    relay: function () {
      const RelayQL_GENERATED = require('RelayQL_GENERATED'),
            CompatProfilePic_user = CompatProfilePic.getFragment('user');

      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [],
        node: RelayQL_GENERATED`fragment CompatStory_story on Story {
  message
  actor {
    ...CompatProfilePic_user
  }
}`
      };
    },
    relayExperimental: function () {
      return require('CompatStory_story.graphql');
    }
  }
});
